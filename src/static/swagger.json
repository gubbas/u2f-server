{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "key",
      "description": "some description",
      "externalDocs": {
        "description": "wiki",
        "url": "https://google.com"
      }
    },
    {
      "name": "otp",
      "description": "some description",
      "externalDocs": {
        "description": "wiki",
        "url": "https://google.com"
      }
    },
    {
      "name": "code",
      "description": "some description",
      "externalDocs": {
        "description": "wiki",
        "url": "https://google.com"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/status": {
      "get": {
        "operationId": "mfaStatus",
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/logs": {
      "get": {
        "operationId": "mfaLogs",
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/key/register": {
      "post": {
        "operationId": "keyRegisterStart",
        "tags": [
          "key"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/key/register/finish": {
      "post": {
        "operationId": "keyRegisterFinish",
        "tags": [
          "key"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/key/remove": {
      "delete": {
        "operationId": "keyRemove",
        "tags": [
          "key"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/key/authenticate": {
      "post": {
        "operationId": "keyAuthenticateStart",
        "tags": [
          "key"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/key/authenticate/finish": {
      "post": {
        "operationId": "keyAuthenticateFinish",
        "tags": [
          "key"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/otp/register": {
      "post": {
        "operationId": "otpRegisterStart",
        "tags": [
          "otp"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/otp/register/finish": {
      "post": {
        "operationId": "otpRegisterFinish",
        "tags": [
          "otp"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/otp/remove": {
      "delete": {
        "operationId": "otpRemove",
        "tags": [
          "otp"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/otp/authenticate": {
      "get": {
        "operationId": "otpAuthenticate",
        "tags": [
          "otp"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/code/issue": {
      "post": {
        "operationId": "codeRegister",
        "tags": [
          "code"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    },
    "/code/authenticate": {
      "get": {
        "operationId": "codeAuthenticate",
        "tags": [
          "code"
        ],
        "summary": "some summary",
        "description": "some description",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "somekind of error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "modelName": {
      "type": "object",
      "required": [
        "appId",
        "account",
        "secret"
      ],
      "properties": {
        "appId": {
          "type": "string",
          "description": "some description",
          "example": "zzzzz"
        },
        "account": {
          "type": "string",
          "description": "some description",
          "example": "zzzzz"
        },
        "secret": {
          "type": "string",
          "description": "some description",
          "example": "zzzzz"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}